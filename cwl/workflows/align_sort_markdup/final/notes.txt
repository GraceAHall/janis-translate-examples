

ISSUE 1
    ERROR

    SOLUTION 
        BEFORE
            workflow {

                ALIGN(
                    ch_bams.flatten(),       // bam
                    ch_reference,            // reference
                    ch_readgroups.flatten()  // readgroup
                )

                INDEX_BAM(
                    MARK_DUPLICATES_AND_SORT.out.sorted_bam.map{ tuple -> tuple[0] }  // bam
                )

                MARK_DUPLICATES_AND_SORT(
                    params.mark_duplicates_and_sort.script,  // script
                    NAME_SORT.out.name_sorted_bam,           // bam
                    params.NULL_VALUE,                       // input_sort_order
                    params.final_name                        // output_name
                )

                MERGE(
                    ALIGN.out.tagged_bam.toList(),  // bams
                    params.final_name               // name
                )

                NAME_SORT(
                    MERGE.out.merged_bam  // bam
                )

            }
            
        AFTER
            workflow {

                ALIGN(
                    ch_bams.flatten(),       // bam
                    ch_reference,            // reference
                    ch_readgroups.flatten()  // readgroup
                )

                MERGE(
                    ALIGN.out.tagged_bam.collect(),  // bams
                    params.final_name               // name
                )

                NAME_SORT(
                    MERGE.out.merged_bam  // bam
                )
                
                MARK_DUPLICATES_AND_SORT(
                    params.mark_duplicates_and_sort.script,  // script
                    NAME_SORT.out.name_sorted_bam,           // bam
                    params.NULL_VALUE,                       // input_sort_order
                    params.final_name                        // output_name
                )
                
                INDEX_BAM(
                    MARK_DUPLICATES_AND_SORT.out.sorted_bam.map{ tuple -> tuple[0] }  // bam
                )

            }



ISSUE 2
    ERROR
        Caused by:
        Process `ALIGN:ALIGN_AND_TAG (1)` terminated with an error exit status (1)

        Command executed:
        /bin/bash /usr/bin/alignment_helper.sh     2895499223.bam     @RG INCLID:2895499223RY_PU:H7HY2CCXX.3.ATCACGGTITY=ISM:H_NJ-HCC1395-HCC1395ILB:H_NJ-HCC1395-HCC1395-lg24-lib1LEVEL=5PL:IlluminaSCN:WUGSC     chr17_test.fa          8     > refAlign.bam

    SOLUTION
        (in script)
        ${readgroup} \
        ->
        "${readgroup}" \


ISSUE 3

    ERROR
        Process `MERGE` input file name collision -- There are multiple input files for each of the following file names: refAlign.bam

    SOLUTION
        BEFORE 
            process ALIGN_AND_TAG {
            
            container "mgibio/alignment_helper-cwl:1.0.0"
            publishDir "${params.outdir}/align_and_tag"
            cpus "${params.align_and_tag.cpus}"
            memory "${params.align_and_tag.memory}"

            input:
            path reference
            path bam
            val readgroup
            val dummy

            output:
            path "refAlign.bam", emit: aligned_bam

            script:
            def reference = reference[0]
            def dummy = dummy != params.NULL_VALUE ? dummy : ""
            """
            /bin/bash /usr/bin/alignment_helper.sh \
            ${bam} \
            "${readgroup}" \
            ${reference} \
            ${dummy} \
            8 \
            > refAlign.bam \
            """
        }

        AFTER 
            process ALIGN_AND_TAG {
            
            container "mgibio/alignment_helper-cwl:1.0.0"
            publishDir "${params.outdir}/align_and_tag"
            cpus "${params.align_and_tag.cpus}"
            memory "${params.align_and_tag.memory}"

            input:
            path reference
            path bam
            val readgroup
            val dummy

            output:
            path "refAlign.bam", emit: aligned_bam

            script:
            def reference = reference[0]
            def dummy = dummy != params.NULL_VALUE ? dummy : ""
            """
            /bin/bash /usr/bin/alignment_helper.sh \
            ${bam} \
            "${readgroup}" \
            ${reference} \
            ${dummy} \
            8 \
            > refAlign.bam \
            """
        }
